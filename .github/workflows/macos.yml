name: macos-build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  INSTALL_LOCATION: ".local"
  CC: clang
  CXX: clang++

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{env.INSTALL_LOCATION}}
        key: ${{matrix.os}}-dependencies
    - name: Get Conan
      if: ${{ steps.cache.output.cache-hit != 'true' }}
      # You may pin to the exact commit or the version.
      # uses: turtlebrowser/get-conan@4dc7e6dd45c8b1e02e909979d7cfc5ebba6ddbe2
      uses: turtlebrowser/get-conan@v1.0
    - name: Setup Ninja
      if: ${{ steps.cache.output.cache-hit != 'true' }}
      # You may pin to the exact commit or the version.
      # uses: ashutoshvarma/setup-ninja@93f8b9763516f1fb9b4d9840b12d844bee17791f
      uses: ashutoshvarma/setup-ninja@v1.1
      with:
        # Ninja version. Make sure given ninja version exists in ninja github release
        version: # default is 1.10.0
        # Folder where ninja binary will be downloaded
        dest: # optional, default is ninja_bin
        # Override default platform detection logic. Accepted values are [mac, linux, win]
        platform: # optional
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j4 --target ALL_BUILD --verbose
